from aiogram import Bot, Dispatcher, executor, types
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)
bot = Bot(token="7954452949:AAFPjobmKF43QWu6oFC2szX_xTvoc9uClkk")  # ‚Üê –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω!
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply("–ë–æ—Ç –∂–∏–≤! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /waifu")

@dp.message_handler(commands=['waifu'])
async def waifu(message: types.Message):
    try:
        # –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫)
        photo_url = "https://i.imgur.com/9pNffOY.jpg"  # –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ URL
        
        await message.answer_photo(
            photo=photo_url,
            caption="–í–æ—Ç –≤–∞—à–∞ –≤–∞–π—Ñ—É!",
            reply_markup=types.InlineKeyboardMarkup().add(
                types.InlineKeyboardButton(
                    "‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", 
                    callback_data="add_fav"
                )
            )
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ /waifu: {e}")
        await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ üò¢")

@dp.callback_query_handler(text="add_fav")
async def add_fav(callback: types.CallbackQuery):
    await callback.answer("–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ!")

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
